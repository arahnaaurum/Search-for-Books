Search for Books: React-приложение поиска книг с помощью Google Books API.

Стэк: React, Redux, Redux Toolkit, Typescript, CSS

1. Функционал:
1.1. Стартовая страница: имеет текстовое поле для ввода подстроки и кнопку поиска.
Триггером к поиску является либо нажатие Enter (когда текстовое поле в фокусе), либо нажатие кнопки поиска.

1.2. Фильтрация по категориям. Ниже текстового поля располагается селект с категориями: all, art, biography, computers, history, medical, poetry. Если выбрано "all" (выбрано изначально), то поиск производится по всем категориям.
ВАЖНО: Фильтрация осуществляется с помощью инструментов, предложенных Google Books API, а именно - через добавление к параметрам запроса +subject:[категория].
Согласно документации, такой запрос возвращает результаты, в которых текст, следующий за ключевым словом subject, указан в списке категорий тома.
Однако на практике категории книг и результаты поиска по данному параметру не всегда совпадают.
Для того, чтобы продемонстрировать другой возможный подход к фильтрации результатов поиска, я создала отдельный компонет FilterByCategory (закомментирован на странице Main).
При подключении данного компонента, он будет осуществлять фильтрацию результатов исходя из совпадения категории поиска и категории книги.

1.3. Сортировка. Рядом с селектом категорий находится селект с вариантами сортировки: relevance (выбран изначально), newest.

1.4. Книги отображаются карточками, всего 30 шт. При отсутствии у книги обложки установлена картинка-заглушка.
Над блоком с карточками отображается количество найденных по запросу книг.

1.5. Ниже блока с карточками находится кнопка 'Load more', по клику на нее к уже загруженным книгам подгружаются еще. Шаг пагинации - 30.

1.6. При клике на карточку происходит переход на детальную страницу книги, на которой выводятся ее данные (если имеются): изображение обложки, название, все категории, все авторы, описание.

2. Замечания по подключенным библиотекам: Redux Toolkit подключен для того, чтобы более компактным и удобочитаемым образом создавать асинхронные thunk-и.
Последние, в частности, используются для отслеживания состояния загрузки, а также позволяют более просто и эффективно обработать случай отклоненного сервером запроса.

3. Докеризация: добавлен Dockerfile.prod для запуска production-версии приложения из Docker контейнера.